[{"C:\\myProjects\\higgle-app\\src\\index.js":"1","C:\\myProjects\\higgle-app\\src\\reportWebVitals.js":"2","C:\\myProjects\\higgle-app\\src\\App.js":"3","C:\\myProjects\\higgle-app\\src\\components\\Header\\Header.js":"4","C:\\myProjects\\higgle-app\\src\\components\\Settings\\Settings.js":"5","C:\\myProjects\\higgle-app\\src\\components\\Schedule\\Schedule.js":"6","C:\\myProjects\\higgle-app\\src\\icons\\Logo.js":"7","C:\\myProjects\\higgle-app\\src\\components\\Lists\\SearchBar.js":"8","C:\\myProjects\\higgle-app\\src\\icons\\SearchBtn.js":"9","C:\\myProjects\\higgle-app\\src\\components\\Lists\\List.js":"10","C:\\myProjects\\higgle-app\\src\\components\\Lists\\PriorityForm.js":"11","C:\\myProjects\\higgle-app\\src\\components\\Lists\\ListItem.js":"12","C:\\myProjects\\higgle-app\\src\\components\\Lists\\ListsPage.js":"13","C:\\myProjects\\higgle-app\\src\\components\\Lists\\functions\\showPriorityandChecked.js":"14","C:\\myProjects\\higgle-app\\src\\components\\Lists\\NewListForm.js":"15","C:\\myProjects\\higgle-app\\src\\components\\Lists\\Icons.js":"16"},{"size":501,"mtime":1607433401288,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1607417450620,"results":"19","hashOfConfig":"18"},{"size":1010,"mtime":1608229257310,"results":"20","hashOfConfig":"18"},{"size":905,"mtime":1607446039698,"results":"21","hashOfConfig":"18"},{"size":184,"mtime":1607440653992,"results":"22","hashOfConfig":"18"},{"size":186,"mtime":1607440630897,"results":"23","hashOfConfig":"18"},{"size":867,"mtime":1607499340935,"results":"24","hashOfConfig":"18"},{"size":403,"mtime":1607546386504,"results":"25","hashOfConfig":"18"},{"size":1333,"mtime":1607588883951,"results":"26","hashOfConfig":"18"},{"size":2870,"mtime":1608299230449,"results":"27","hashOfConfig":"18"},{"size":2880,"mtime":1608229927479,"results":"28","hashOfConfig":"18"},{"size":2643,"mtime":1608232489422,"results":"29","hashOfConfig":"18"},{"size":4658,"mtime":1608299897280,"results":"30","hashOfConfig":"18"},{"size":1757,"mtime":1608281893211,"results":"31","hashOfConfig":"18"},{"size":3107,"mtime":1608292402514,"results":"32","hashOfConfig":"18"},{"size":2308,"mtime":1608312292831,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"lt7w2x",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\myProjects\\higgle-app\\src\\index.js",[],["70","71"],"C:\\myProjects\\higgle-app\\src\\reportWebVitals.js",[],"C:\\myProjects\\higgle-app\\src\\App.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Header\\Header.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Settings\\Settings.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Schedule\\Schedule.js",[],"C:\\myProjects\\higgle-app\\src\\icons\\Logo.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Lists\\SearchBar.js",[],"C:\\myProjects\\higgle-app\\src\\icons\\SearchBtn.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Lists\\List.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Lists\\PriorityForm.js",["72"],"import { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport function handleOpenPriorityForm(e) {\r\n  let item = e.target;\r\n\r\n  while (item.classList[0] !== \"item-container\") {\r\n    item = item.parentElement;\r\n  }\r\n\r\n  const form = item.children[2];\r\n\r\n  form.style.display = \"flex\";\r\n}\r\n\r\nconst handleClosePriorityForm = (e) => {\r\n  let item = e.target;\r\n\r\n  while (item.classList[0] !== \"item-container\") {\r\n    item = item.parentElement;\r\n  }\r\n  const form = item.children[2];\r\n  form.style.display = \"none\";\r\n};\r\n\r\nconst selectPriority = (e, props) => {\r\n  const item = e.target;\r\n  const priority = getPriorityId(item);\r\n  const itembox = getListItem(item);\r\n  removeOtherPriority(itembox);\r\n\r\n  switch (priority) {\r\n    case \"high\":\r\n      props.onSendPriority(\"high\", props.onSendItem.item, props.onSendListName);\r\n      break;\r\n    case \"medium\":\r\n      props.onSendPriority(\"medium\", props.onSendItem.item,props.onSendListName);\r\n      break;\r\n    case \"low\":;\r\n      props.onSendPriority(\"low\", props.onSendItem.item,props.onSendListName);\r\n      break;\r\n    case \"neutral\":\r\n      props.onSendPriority(\"neutral\", props.onSendItem.item,props.onSendListName);\r\n      break;\r\n  }\r\n  handleClosePriorityForm(e);\r\n};\r\n\r\n\r\nconst getPriorityId = (item) => {\r\n  if (item.classList[0] === \"icon\" || item.classList[0] === \"priority\")\r\n    item = item.parentElement;\r\n  return item.id;\r\n};\r\n\r\nconst getListItem = (item) => {\r\n  while (item.classList[0] !== \"item-container\") {\r\n    item = item.parentElement;\r\n  }\r\n  return item;\r\n};\r\n\r\nconst removeOtherPriority = (item) => {\r\n  const classes = item.classList;\r\n  for (var i = 0; i < classes.length; i++)\r\n    if (classes[i] !== \"item-container\") item.classList.remove(classes[i]);\r\n};\r\n\r\nconst PriorityForm = (props) => {\r\n  return (\r\n    <div className=\"priority-container\" id=\"priority-form\">\r\n      <button\r\n        id=\"close-btn\"\r\n        type=\"button\"\r\n        onClick={(e) => handleClosePriorityForm(e)}\r\n      >\r\n        <IconContext.Provider value={{ className: \"close-btn-icon\" }}>\r\n          <AiFillCloseCircle />\r\n        </IconContext.Provider>\r\n      </button>\r\n\r\n      <p id=\"high\" onClick={(e) => selectPriority(e, props)}>\r\n        <span className=\"priority\">High Priority</span>\r\n        <span className=\"icon\">!!!</span>\r\n      </p>\r\n      <p id=\"medium\" onClick={(e) => selectPriority(e, props)}>\r\n        <span className=\"priority\">Medium Priority</span>\r\n        <span className=\"icon\">!!</span>\r\n      </p>\r\n      <p id=\"low\" onClick={(e) => selectPriority(e, props)}>\r\n        <span className=\"priority\">Low Priority</span>\r\n        <span className=\"icon\">!</span>\r\n      </p>\r\n      <p id=\"neutral\" onClick={(e) => selectPriority(e, props)}>\r\n        <span className=\"priority\">Neutral</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriorityForm;\r\n","C:\\myProjects\\higgle-app\\src\\components\\Lists\\ListItem.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Lists\\ListsPage.js",["73","74","75"],"import React, { Component } from \"react\";\r\nimport \"./styles/Lists.scss\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport List from \"./List\";\r\nimport NewListForm from \"./NewListForm\";\r\nimport { handleCloseForm } from \"./NewListForm\";\r\nimport { showPriority, showChecked } from \"./functions/showPriorityandChecked\";\r\n\r\nclass ListsPage extends Component {\r\n  state = {\r\n    newName: \"\",\r\n    focus: \"\",\r\n    icon: null,\r\n    lists: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const lists = JSON.parse(localStorage.getItem(\"lists\"));\r\n    if (lists) this.setState({ lists });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const input = document.getElementById(this.state.focus);\r\n    console.log(\"input \", input);\r\n    if (input) input.focus();\r\n    console.log(\"Component did update\", this.state.lists);\r\n    localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n    this.state.lists.map((list) => {\r\n      list.items.map((item) => {\r\n        showPriority(list.name, item);\r\n        showChecked(list.name, item);\r\n      });\r\n      return list;\r\n    });\r\n  }\r\n\r\n  handleAddNewList() {\r\n    const lists = this.state.lists;\r\n    if (lists.every((list) => list.name !== this.state.newName)) {\r\n      const lists = this.state.lists.concat({\r\n        name: this.state.newName,\r\n        icon: this.state.icon,\r\n        items: [],\r\n      });\r\n      localStorage.setItem(\"lists\", JSON.stringify(lists));\r\n      this.setState({ icon: null });\r\n      this.setState({ lists });\r\n    }\r\n  }\r\n\r\n  handleDeleteList = (e, nameList) => {\r\n    const lists = this.state.lists.filter((l) => l.name !== nameList);\r\n\r\n    this.setState({ lists });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleCloseForm();\r\n    this.handleAddNewList();\r\n  };\r\n\r\n  handleName = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ newName: e.target.value });\r\n  };\r\n\r\n  handleIcon = (icon) => {\r\n    this.setState({ icon });\r\n    document.getElementById(\"icons\").style.display = \"none\";\r\n  };\r\n\r\n  handleAddItem = (e, nameList, item) => {\r\n    e.preventDefault();\r\n\r\n    const lists = this.state.lists;\r\n    const items = lists.filter((l) => l.name === nameList)[0].items;\r\n    if (item !== \"\" && items.every((i) => i.item !== item)) {\r\n      const itemInfo = { item: item, priority: \"neutral\", checked: false };\r\n      items.push(itemInfo);\r\n      this.setState({ focus: nameList });\r\n      this.setState({ lists });\r\n    }\r\n  };\r\n\r\n  handleDeleteLi = (nameList, nameItem) => {\r\n    const lists = this.state.lists;\r\n    lists.map((l) => {\r\n      if (l.name === nameList) {\r\n        const itemsList = l.items.filter((item) => item.item !== nameItem);\r\n        l.items = itemsList;\r\n      }\r\n      return l;\r\n    });\r\n\r\n    this.setState({ lists });\r\n  };\r\n\r\n  handleChecked = (nameList, nameItem) => {\r\n    console.log(\"handle check\");\r\n    console.log(`nameList: ${nameList} nameItem: ${nameItem}`);\r\n    const lists = this.state.lists;\r\n    lists.map((l) => {\r\n      if (l.name === nameList) {\r\n        l.items.map((i) => {\r\n          if (i.item === nameItem) i.checked = !i.checked;\r\n        });\r\n      }\r\n      return l;\r\n    });\r\n\r\n    this.setState({ lists });\r\n  };\r\n  onAddPriorityToList = (priority, nameItem, nameList) => {\r\n    const lists = this.state.lists;\r\n    lists.map((l) => {\r\n      if (l.name === nameList) {\r\n        l.items.map((i) => {\r\n          if (i.item === nameItem) i.priority = priority;\r\n        });\r\n      }\r\n      return l;\r\n    });\r\n\r\n    this.setState({ lists });\r\n  };\r\n\r\n  showLists = () => {\r\n    return this.state.lists.map((list) => {\r\n      return (\r\n        <List\r\n          onRef={(ref) => (this.list = ref)}\r\n          key={Math.floor(Math.random() * 1000000)}\r\n          listName={list.name}\r\n          icon={list.icon}\r\n          items={list.items}\r\n          addItem={this.handleAddItem}\r\n          onDelete={this.handleDeleteList}\r\n          onSendPriority={this.onAddPriorityToList}\r\n          onDeleteLi={this.handleDeleteLi}\r\n          onChecked={this.handleChecked}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"lists-section\">\r\n        <>\r\n          <div className=\"lists-container\">\r\n            <SearchBar />\r\n\r\n            <div className=\"lists-box\">{this.showLists()}</div>\r\n\r\n            <NewListForm\r\n              receiveSubmit={this.handleSubmit}\r\n              receiveName={this.handleName}\r\n              onSendIcon={this.handleIcon}\r\n              icon={this.state.icon}\r\n            />\r\n          </div>\r\n        </>\r\n        <>\r\n          <div className=\"piechart-container\"></div>\r\n        </>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListsPage;\r\n","C:\\myProjects\\higgle-app\\src\\components\\Lists\\functions\\showPriorityandChecked.js",["76"],"export const showPriority = (listName, item) => {\r\n  const priority = item.priority;\r\n  const listContainer = getRightListContainer(listName);\r\n\r\n  const itemContainer = listContainer\r\n    ? getRightItemContainer(listContainer.children, item.item)\r\n    : null;\r\n    \r\n  if (itemContainer) {\r\n    switch (priority) {\r\n      case \"high\":\r\n        itemContainer.classList.add(\"high-p\");\r\n        break;\r\n      case \"medium\":\r\n        itemContainer.classList.add(\"medium-p\");\r\n        break;\r\n      case \"low\":\r\n        itemContainer.classList.add(\"low-p\");\r\n        break;\r\n\r\n      case \"neutral\":\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\nexport const showChecked = (listName, item) => {\r\n  const checked = item.checked;\r\n  const listContainer = getRightListContainer(listName);\r\n\r\n  const itemContainer = listContainer\r\n    ? getRightItemContainer(listContainer.children, item.item)\r\n    : null;\r\n\r\n  if (checked) {\r\n    itemContainer.classList.add(\"checked-text\");\r\n    itemContainer.children[0].children[1].classList.add(\"checked\");\r\n  } else {\r\n    itemContainer.classList.remove(\"checked-text\");\r\n    itemContainer.children[0].children[1].classList.remove(\"checked\");\r\n  }\r\n};\r\n\r\nconst getRightListContainer = (listName) => {\r\n  const listContainers = document.getElementsByClassName(\"list-container\");\r\n  for (let i = 0; i < listContainers.length; i++) {\r\n    let intext = listContainers[i].children[0].innerText;\r\n    if (intext === listName) {\r\n      return listContainers[i];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getRightItemContainer = (listContainer, itemName) => {\r\n  for (let i = 1; i < listContainer.length - 1; i++) {\r\n    if (listContainer[i].children[1].innerHTML === itemName) {\r\n      return listContainer[i];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","C:\\myProjects\\higgle-app\\src\\components\\Lists\\NewListForm.js",[],"C:\\myProjects\\higgle-app\\src\\components\\Lists\\Icons.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":32,"column":3,"nodeType":"83","messageId":"84","endLine":45,"endColumn":4},{"ruleId":"85","severity":1,"message":"86","line":29,"column":29,"nodeType":"87","messageId":"88","endLine":29,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":105,"column":25,"nodeType":"87","messageId":"88","endLine":105,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":118,"column":25,"nodeType":"87","messageId":"88","endLine":118,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":10,"column":5,"nodeType":"83","messageId":"84","endLine":23,"endColumn":6},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]