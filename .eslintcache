[{"C:\\myProjects\\ReactProjects\\higgle-app\\src\\index.js":"1","C:\\myProjects\\ReactProjects\\higgle-app\\src\\reportWebVitals.js":"2","C:\\myProjects\\ReactProjects\\higgle-app\\src\\App.js":"3","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Header\\Header.js":"4","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\ListsPage.js":"5","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Settings\\Settings.js":"6","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Footer\\Footer.js":"7","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Schedule\\Schedule.js":"8","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Schedule\\Week.js":"9","C:\\myProjects\\ReactProjects\\higgle-app\\src\\icons\\Logo.js":"10","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\SearchBar.js":"11","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\NewListForm.js":"12","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\List.js":"13","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\PieChart\\DonutPieChart.js":"14","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\PieChart\\CheckedPercentage.js":"15","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Calendar\\Calendar.js":"16","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Schedule\\Day.js":"17","C:\\myProjects\\ReactProjects\\higgle-app\\src\\icons\\SearchBtn.js":"18","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\Icons.js":"19","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\ListItem.js":"20","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\PieChart\\Colors.js":"21","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\PriorityForm.js":"22"},{"size":289,"mtime":1610628159907,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1607417450620,"results":"25","hashOfConfig":"24"},{"size":1078,"mtime":1611507437672,"results":"26","hashOfConfig":"24"},{"size":2321,"mtime":1610876157638,"results":"27","hashOfConfig":"24"},{"size":9523,"mtime":1611515538983,"results":"28","hashOfConfig":"24"},{"size":184,"mtime":1607440653992,"results":"29","hashOfConfig":"24"},{"size":1301,"mtime":1611518769013,"results":"30","hashOfConfig":"24"},{"size":8057,"mtime":1611517685754,"results":"31","hashOfConfig":"24"},{"size":5427,"mtime":1611518711673,"results":"32","hashOfConfig":"24"},{"size":867,"mtime":1607499340935,"results":"33","hashOfConfig":"24"},{"size":556,"mtime":1608704886465,"results":"34","hashOfConfig":"24"},{"size":3175,"mtime":1610628102460,"results":"35","hashOfConfig":"24"},{"size":3006,"mtime":1610696828894,"results":"36","hashOfConfig":"24"},{"size":1725,"mtime":1610554526611,"results":"37","hashOfConfig":"24"},{"size":483,"mtime":1609788725233,"results":"38","hashOfConfig":"24"},{"size":2405,"mtime":1610892445036,"results":"39","hashOfConfig":"24"},{"size":2540,"mtime":1610893753590,"results":"40","hashOfConfig":"24"},{"size":1332,"mtime":1610554674281,"results":"41","hashOfConfig":"24"},{"size":2286,"mtime":1610553042934,"results":"42","hashOfConfig":"24"},{"size":4650,"mtime":1611515434686,"results":"43","hashOfConfig":"24"},{"size":493,"mtime":1608712615773,"results":"44","hashOfConfig":"24"},{"size":3214,"mtime":1611518735860,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"182ol59",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},"C:\\myProjects\\ReactProjects\\higgle-app\\src\\index.js",[],["98","99"],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\reportWebVitals.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\App.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Header\\Header.js",["100","101"],"import React, { Component } from \"react\";\r\nimport \"./Header.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logo from \"../../icons/Logo\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\n\r\nclass Header extends Component {\r\n  openMenu = () => {\r\n    const navlist = document.getElementById(\"nav-list\");\r\n    navlist.classList.toggle(\"menu\");\r\n    const burger = document.getElementById(\"burger-menu\");\r\n    burger.style.display = \"block\";\r\n  };\r\n\r\n  closeMenu = () => {\r\n    const navlist = document.getElementById(\"nav-list\");\r\n    navlist.classList.toggle(\"menu\");\r\n    const burger = document.getElementById(\"burger-menu\");\r\n    burger.style.display = \"none\";\r\n  };\r\n\r\n  checkIfMenu = () => {\r\n    const navlist = document.getElementById(\"nav-list\");\r\n    if (navlist.classList.contains(\"menu\")) this.closeMenu();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"header\">\r\n        <nav>\r\n          <div className=\"logo\">\r\n            <Logo className=\"icon\" />\r\n            <h1>Higgle</h1>\r\n          </div>\r\n          <ul id=\"nav-list\">\r\n            <li>\r\n              <NavLink\r\n                to=\"/lists\"\r\n                className=\"link\"\r\n                activeClassName=\"selected\"\r\n                onClick={() => this.checkIfMenu()}\r\n              >\r\n                Lists\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/schedule\"\r\n                className=\"link\"\r\n                activeClassName=\"selected\"\r\n                onClick={() => this.checkIfMenu()}\r\n              >\r\n                Schedule\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to=\"/settings\"\r\n                className=\"link\"\r\n                activeClassName=\"selected\"\r\n                onClick={() => this.checkIfMenu()}\r\n              >\r\n                Settings\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n      {/*    <GiHamburgerMenu className=\"burger\" onClick={() => this.openMenu()} />\r\n          <AiOutlineClose\r\n            id=\"burger-menu\"\r\n            className=\"close-menu-btn\"\r\n            onClick={() => this.closeMenu()}\r\n    />*/}\r\n        </nav>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\ListsPage.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Settings\\Settings.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Footer\\Footer.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Schedule\\Schedule.js",["102"],"import React, { Component } from \"react\";\r\nimport { getToday, getWeek } from \"../Calendar/Calendar\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport Week from \"./Week\";\r\nimport \"./styles/schedule.scss\";\r\nimport ListsPage from \"../Lists/ListsPage\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nclass Schedule extends Component {\r\n  state = {\r\n    view: \"week\",\r\n    newItem: \"\",\r\n    agenda: [], //[{date:x, items:{item:, priority, checked}]\r\n    today: \"\",\r\n    focus: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted schedule\");\r\n    const today = getToday();\r\n    this.setState({ today });\r\n    const agenda = JSON.parse(localStorage.getItem(\"agenda\"));\r\n    if (agenda) this.setState({ agenda });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const input = document.getElementById(\"input_\" + this.state.focus);\r\n\r\n    if (input) {\r\n      input.value = \"\";\r\n      input.focus();\r\n    }\r\n\r\n    localStorage.setItem(\"agenda\", JSON.stringify(this.state.agenda));\r\n\r\n    this.state.agenda.map((date) => {\r\n      date.items.map((item) => {\r\n        return item;\r\n      });\r\n      return date;\r\n    });\r\n  }\r\n\r\n  updateView = (e) => {\r\n    const view = e.target.value;\r\n\r\n    if (view !== this.state.view) {\r\n      switch (view) {\r\n        case \"month\":\r\n          this.setState({ view: \"month\" });\r\n          break;\r\n        default:\r\n          this.setState({ view: \"week\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDeleteLi = (date, nameItem) => {\r\n    var agenda = this.state.agenda;\r\n    agenda.map((item) => {\r\n      if (new Date(item.date).toLocaleDateString(\"en-GB\") === date) {\r\n        const itemsList = item.items.filter((i) => i.item !== nameItem);\r\n        item.items = itemsList;\r\n      }\r\n      return item;\r\n    });\r\n\r\n    var agenda = this.removeEmptyDateListFromLocalStorage();\r\n    console.log(\"AGENDA \", agenda);\r\n    this.setState({ agenda });\r\n  };\r\n\r\n  removeEmptyDateListFromLocalStorage = () => {\r\n    return this.state.agenda.filter((item) => item.items.length !== 0);\r\n  };\r\n\r\n  handleChecked = (date, nameItem) => {\r\n    console.log(\"check \", date);\r\n    const agenda = this.state.agenda;\r\n    agenda.map((item) => {\r\n      if (new Date(item.date).toLocaleDateString(\"en-GB\") === date) {\r\n        item.items.map((i) => {\r\n          if (i.item === nameItem) i.checked = !i.checked;\r\n          return i;\r\n        });\r\n      }\r\n      return item;\r\n    });\r\n\r\n    this.setState({ agenda });\r\n  };\r\n\r\n  onAddPriorityToList = (priority, nameItem, date) => {\r\n    const agenda = this.state.agenda;\r\n    agenda.map((item) => {\r\n      if (new Date(item.date).toLocaleDateString(\"en-GB\") === date) {\r\n        item.items.map((i) => {\r\n          if (i.item === nameItem) i.priority = priority;\r\n          return i;\r\n        });\r\n      }\r\n      return item;\r\n    });\r\n\r\n    this.setState({ agenda });\r\n  };\r\n\r\n  handleScheduleLi = async (newDate, oldDate, nameItem) => {\r\n    if (newDate) {\r\n      if (new Date(newDate).toLocaleDateString(\"en-GB\") !== oldDate) {\r\n        const transferItem = this.findRightTransferItem(oldDate, nameItem);\r\n\r\n        var datelist = await this.findDateList(newDate);\r\n\r\n        if (datelist.length === 0) {\r\n          const agenda = this.state.agenda.concat({\r\n            date: newDate,\r\n            items: [transferItem],\r\n          });\r\n          this.setState({ agenda });\r\n        } else {\r\n          datelist[0].items.push(transferItem);\r\n          const agenda = this.state.agenda.map((dateList) => {\r\n            if (\r\n              new Date(dateList.date).toLocaleDateString(\"en-GB\") ===\r\n              new Date(newDate).toLocaleDateString(\"en-GB\")\r\n            ) {\r\n              dateList.items = datelist[0].items;\r\n            }\r\n            return dateList;\r\n          });\r\n          this.setState({ agenda });\r\n        }\r\n\r\n        this.handleDeleteLi(oldDate, nameItem);\r\n      }\r\n    }\r\n  };\r\n\r\n  findDateList = async (newDate) => {\r\n    return this.state.agenda.filter(\r\n      (dateList) =>\r\n        new Date(dateList.date).toLocaleDateString(\"en-GB\") ===\r\n        new Date(newDate).toLocaleDateString(\"en-GB\")\r\n    );\r\n  };\r\n\r\n  findRightTransferItem = (oldDate, nameItem) => {\r\n    const list = this.state.agenda.filter(\r\n      (date) => new Date(date.date).toLocaleDateString(\"en-GB\") === oldDate\r\n    );\r\n    const item = list[0].items.filter((i) => i.item === nameItem);\r\n    return item[0];\r\n  };\r\n\r\n  handleReceived = (e) => {\r\n    e.preventDefault();\r\n    const newItem = e.target.value;\r\n    this.setState({ focus: e.target });\r\n    this.setState({ newItem });\r\n  };\r\n\r\n  handleAddItem = async (e, date) => {\r\n    e.preventDefault();\r\n    const newItem = {\r\n      item: this.state.newItem,\r\n      priority: \"neutral\",\r\n      checked: false,\r\n      icon: \"\",\r\n    };\r\n\r\n    var addToDateList = await this.getCorrectDateList(date);\r\n\r\n    if (addToDateList) {\r\n      if (addToDateList.items.every((item) => item.item !== newItem.item))\r\n        addToDateList.items.push(newItem);\r\n    } else {\r\n      //If date list has not been stored yet in the localStorage create new date item and\r\n      //add to Agenda.\r\n      let [day, month, year] = date.split(\"/\");\r\n      var d1 = new Date();\r\n      d1.setFullYear(parseInt(year), parseInt(month) - 1, parseInt(day));\r\n\r\n      const newDateList = {\r\n        date: d1,\r\n        items: [newItem],\r\n      };\r\n      const agenda = this.state.agenda.concat(newDateList);\r\n      this.setState({ agenda });\r\n    }\r\n    this.setState({ focus: date });\r\n  };\r\n\r\n  getCorrectDateList = async (date) => {\r\n    for (let i = 0; i < this.state.agenda.length; i++) {\r\n      if (\r\n        new Date(this.state.agenda[i].date).toLocaleDateString(\"en-GB\") === date\r\n      )\r\n        return this.state.agenda[i];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  closeSideLists = () => {\r\n    const lists = document.getElementById(\"addFromLists\");\r\n    lists.style.transform = \"translateX(-100%)\";\r\n  };\r\n\r\n  openSideLists = () => {\r\n    const lists = document.getElementById(\"addFromLists\");\r\n    lists.style.transform = \"translateX(0%)\";\r\n    const schedule = document.getElementById(\"schedule-s\");\r\n    schedule.style.overflow = \"visible\";\r\n  };\r\n\r\n  showWeekly = () => {\r\n    return (\r\n      <>\r\n        <h3 className=\"view\">{`Week  ${getWeek(new Date())}`}</h3>\r\n        <Week\r\n          key={getWeek(new Date()) + \"_\" + this.state.today}\r\n          onAddItem={this.handleAddItem}\r\n          receiveNewItem={this.handleReceived}\r\n          onSendPriority={this.onAddPriorityToList}\r\n          onChecked={this.handleChecked}\r\n          onDeleteLi={this.handleDeleteLi}\r\n          onScheduleLi={this.handleScheduleLi}\r\n          agenda={this.state.agenda}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  showMonthly = () => {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <h3 className=\"view\">January</h3>{\" \"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section id=\"schedule-s\" className=\"schedule-section\">\r\n          <form className=\"select-view-form\">\r\n            <select\r\n              name=\"schedule\"\r\n              id=\"scheduleView\"\r\n              onClick={(e) => this.updateView(e)}\r\n            >\r\n              <option value=\"week\">Week</option>\r\n              <option value=\"month\">Month</option>\r\n            </select>\r\n          </form>\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-from-list-btn\"\r\n            onClick={() => this.openSideLists()}\r\n          >\r\n            <FaPlus className=\"add\" />\r\n            Add From Lists\r\n          </button>\r\n          {this.state.view === \"week\" ? this.showWeekly() : this.showMonthly()}\r\n          <div id=\"addFromLists\" className=\"sideLists\">\r\n            <ListsPage key={\"lists-page\"} />\r\n            <button className=\"close-sideLists-btn\" type=\"button\">\r\n              <AiOutlineClose\r\n                className=\"close-btn\"\r\n                onClick={() => this.closeSideLists()}\r\n              />\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Schedule;\r\n","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Schedule\\Week.js",["103","104"],"import React, { Component } from \"react\";\r\nimport Day from \"./Day\";\r\nimport { getWeekDates, getToday } from \"../Calendar/Calendar\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\n\r\nclass Week extends Component {\r\n  state = {\r\n    week: [],\r\n    days: [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\",\r\n    ],\r\n    today: \"\",\r\n    addWeek: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const week = getWeekDates(this.state.addWeek);\r\n    const today = getToday();\r\n    this.setState({ week });\r\n    this.setState({ today });\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n    if (prevState.addWeek != this.state.addWeek) {\r\n      this.updateWeeks();\r\n    }\r\n    if (prevState.week != this.state.week) {\r\n      if (this.state.addWeek === 0) this.selectToday();\r\n      else this.handleSelectDay(this.state.week[0]);\r\n    }\r\n  };\r\n\r\n  selectToday = () => {\r\n    const days = document.getElementsByClassName(\"day\");\r\n    const smallDays = document.getElementsByClassName(\"day-small\");\r\n    var date = new Date();\r\n    const today = date.getDay() === 0 ? 6 : date.getDay() - 1;\r\n    days[today].classList.add(\"selected\");\r\n    smallDays[today].classList.add(\"select-day\");\r\n  };\r\n\r\n  goForwards = () => {\r\n    const addWeek = this.state.addWeek + 1;\r\n    this.setState({ addWeek });\r\n  };\r\n\r\n  goBackwards = () => {\r\n    const addWeek = this.state.addWeek - 1;\r\n    this.setState({ addWeek });\r\n  };\r\n\r\n  updateWeeks = () => {\r\n    const week = getWeekDates(this.state.addWeek);\r\n    this.setState({ week });\r\n    this.removeSelected();\r\n  };\r\n\r\n  handleSelectDay = (date) => {\r\n    this.removeSelected();\r\n    const selectDay = document.getElementById(date);\r\n    selectDay.classList.add(\"selected\");\r\n    const small = document.getElementById(\"small_\" + date);\r\n    small.classList.add(\"select-day\");\r\n  };\r\n\r\n  removeSelected = () => {\r\n    const days = document.getElementsByClassName(\"day\");\r\n    const smallDays = document.getElementsByClassName(\"day-small\");\r\n    for (var i = 0; i < 7; i++) {\r\n      days[i].classList.remove(\"selected\");\r\n      smallDays[i].classList.remove(\"select-day\");\r\n    }\r\n  };\r\n\r\n  getRightDateList = (day, agenda) => {\r\n    const date = this.state.week[day];\r\n    const list = agenda.filter(\r\n      (item) => new Date(item.date).toLocaleDateString(\"en-GB\") === date\r\n    );\r\n    if (list.length > 0) {\r\n      return list[0].items;\r\n    }\r\n    return list;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"week-container\">\r\n          <ul className=\"day-header-days\">\r\n            <li\r\n              className=\"day-small\"\r\n              id={\"small_\" + this.state.week[0]}\r\n              onClick={() => this.handleSelectDay(this.state.week[0])}\r\n            >\r\n              M\r\n            </li>\r\n            <li\r\n              className=\"day-small\"\r\n              id={\"small_\" + this.state.week[1]}\r\n              onClick={() => this.handleSelectDay(this.state.week[1])}\r\n            >\r\n              T\r\n            </li>\r\n            <li\r\n              className=\"day-small\"\r\n              id={\"small_\" + this.state.week[2]}\r\n              onClick={() => this.handleSelectDay(this.state.week[2])}\r\n            >\r\n              W\r\n            </li>\r\n            <li\r\n              className=\"day-small\"\r\n              id={\"small_\" + this.state.week[3]}\r\n              onClick={() => this.handleSelectDay(this.state.week[3])}\r\n            >\r\n              T\r\n            </li>\r\n            <li\r\n              className=\"day-small\"\r\n              id={\"small_\" + this.state.week[4]}\r\n              onClick={() => this.handleSelectDay(this.state.week[4])}\r\n            >\r\n              F\r\n            </li>\r\n            <li\r\n              className=\"day-small\"\r\n              id={\"small_\" + this.state.week[5]}\r\n              onClick={() => this.handleSelectDay(this.state.week[5])}\r\n            >\r\n              S\r\n            </li>\r\n            <li\r\n              className=\"day-small\"\r\n              id={\"small_\" + this.state.week[6]}\r\n              onClick={() => this.handleSelectDay(this.state.week[6])}\r\n            >\r\n              S\r\n            </li>\r\n          </ul>\r\n          {this.state.week.map((date, i) => (\r\n            <div\r\n              key={\"div\" + date}\r\n              className=\"day\"\r\n              id={date}\r\n              onClick={() => this.handleSelectDay(date)}\r\n            >\r\n              <Day\r\n                key={date}\r\n                day={this.state.today === date ? \"Today\" : this.state.days[i]}\r\n                date={date}\r\n                onAddItem={this.props.onAddItem}\r\n                receiveNewItem={this.props.receiveNewItem}\r\n                items={this.getRightDateList(i, this.props.agenda)}\r\n                onSendPriority={this.props.onSendPriority}\r\n                onChecked={this.props.onChecked}\r\n                onDeleteLi={this.props.onDeleteLi}\r\n                onScheduleLi={this.props.onScheduleLi}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button className=\"forward-btn right\" onClick={() => this.goForwards()}>\r\n          <IoIosArrowForward id=\"right-btn\" />\r\n        </button>\r\n        <button className=\"forward-btn left\" onClick={() => this.goBackwards()}>\r\n          <IoIosArrowForward id=\"left-btn\" />\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Week;\r\n","C:\\myProjects\\ReactProjects\\higgle-app\\src\\icons\\Logo.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\SearchBar.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\NewListForm.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\List.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\PieChart\\DonutPieChart.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\PieChart\\CheckedPercentage.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Calendar\\Calendar.js",["105"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DayPicker from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport \"./calendar.scss\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\n\r\nexport function getWeek(date) {\r\n  //define a date object variable that will take the current system date\r\n  var date1 = new Date(date);\r\n\r\n  //find the year of the current date\r\n  var oneJan = new Date(date1.getFullYear(), 0, 1);\r\n\r\n  // calculating number of days in given year before a given date\r\n  var numberOfDays = Math.floor((date1 - oneJan) / (24 * 60 * 60 * 1000));\r\n\r\n  // adding 1 since to current date and returns value starting from 0\r\n  var result = Math.ceil((date1.getDay() + 1 + numberOfDays) / 7);\r\n\r\n  return result;\r\n}\r\n\r\nexport function getToday() {\r\n  var today = new Date();\r\n  return today.toLocaleDateString(\"en-GB\");\r\n}\r\n\r\nexport function getWeekDates(addWeek) {\r\n  var today = new Date();\r\n  var week = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n\r\n  const weekday = today.getDay() === 0 ? 6 : today.getDay() - 1;\r\n  const add = addWeek * 7;\r\n  for (let i = 0; i < week.length; i++) {\r\n    const days = i + add - weekday;\r\n    var d = new Date();\r\n    d.setDate(d.getDate() + days);\r\n    week[i] = d.toLocaleDateString(\"en-GB\");\r\n  }\r\n  return week;\r\n}\r\nconst closeCalendar = (id) => {\r\n  const calendar = document.getElementById(id);\r\n  calendar.style.display = \"none\";\r\n};\r\nconst Calendar = (props) => {\r\n  const [selectedDay, setSelectedDay] = useState(null);\r\n  useEffect(() => {\r\n    props.onScheduleLi(\r\n      selectedDay,\r\n      props.onSendListName,\r\n      props.onSendItem.item\r\n    );\r\n    const calendar = document.getElementById(\r\n      \"calendar_\" + props.onSendListName + \"_\" + props.onSendItem.item\r\n    );\r\n    calendar.style.display = \"none\";\r\n  }, [selectedDay]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id={\"calendar_\" + props.onSendListName + \"_\" + props.onSendItem.item}\r\n        className=\"calendar-container\"\r\n      >\r\n        <AiFillCloseCircle\r\n          className=\"close-btn-icon\"\r\n          onClick={() =>\r\n            closeCalendar(\r\n              \"calendar_\" + props.onSendListName + \"_\" + props.onSendItem.item\r\n            )\r\n          }\r\n        />\r\n        <DayPicker onDayClick={setSelectedDay} selectedDays={selectedDay} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Schedule\\Day.js",["106"],"import React, { Component } from \"react\";\r\nimport { IoMdAddCircle } from \"react-icons/io\";\r\nimport ListItem from \"../Lists/Lists/ListItem\";\r\n\r\nclass Day extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.setHeaderColor();\r\n  }\r\n\r\n  setHeaderColor = () => {\r\n    const header = document.getElementById(\"header_\" + this.props.date);\r\n    switch (this.props.day) {\r\n      case \"Monday\":\r\n        header.classList.add(\"mon\");\r\n        break;\r\n      case \"Tuesday\":\r\n        header.classList.add(\"tue\");\r\n        break;\r\n      case \"Wednesday\":\r\n        header.classList.add(\"wed\");\r\n        break;\r\n      case \"Thursday\":\r\n        header.classList.add(\"thu\");\r\n        break;\r\n      case \"Friday\":\r\n        header.classList.add(\"fri\");\r\n        break;\r\n      case \"Saturday\":\r\n        header.classList.add(\"sat\");\r\n        break;\r\n      case \"Sunday\":\r\n        header.classList.add(\"sun\");\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  showItems = (items, id) => {\r\n    return (\r\n      <ul className=\"ul-listitems\">\r\n        {items.map((item) => {\r\n          return (\r\n            <ListItem\r\n              key={Math.floor(Math.random() * 1000000)}\r\n              onSendItem={item}\r\n              onSendListName={id}\r\n              onSendPriority={this.props.onSendPriority}\r\n              onDeleteLi={this.props.onDeleteLi}\r\n              onScheduleLi={this.props.onScheduleLi}\r\n              onChecked={this.props.onChecked}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"day-header\" id={\"header_\" + this.props.date}>\r\n          <p className=\"day-week\">{this.props.day}</p>\r\n          <p className=\"day-date\">{this.props.date}</p>\r\n          \r\n        </div>\r\n        <div className=\"list-items\">\r\n          {this.showItems(this.props.items, this.props.date)}\r\n        </div>\r\n\r\n        <div className=\"day-footer\">\r\n          <form>\r\n            <input\r\n              id={\"input_\" + this.props.date}\r\n              type=\"text\"\r\n              placeholder=\"Add your to do..\"\r\n              onChange={(e) => this.props.receiveNewItem(e)}\r\n            />\r\n\r\n            <button\r\n              className=\"add-i-btn\"\r\n              id=\"add-item-btn\"\r\n              type=\"submit\"\r\n              onClick={(e) => this.props.onAddItem(e, this.props.date)}\r\n            >\r\n              <IoMdAddCircle className=\"add-item-icon\" />\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Day;\r\n","C:\\myProjects\\ReactProjects\\higgle-app\\src\\icons\\SearchBtn.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\Icons.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\ListItem.js",["107","108","109"],"import { AiFillDelete, AiFillCalendar, AiOutlineLeft } from \"react-icons/ai\";\r\nimport { RiCheckLine, RiCheckboxBlankLine } from \"react-icons/ri\";\r\nimport { MdPriorityHigh } from \"react-icons/md\";\r\nimport PriorityForm from \"./PriorityForm\";\r\nimport { handleOpenPriorityForm } from \"./PriorityForm\";\r\nimport Calendar from \"../../Calendar/Calendar\";\r\nimport { icons } from \"./Icons\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst handleSlideInBtns = (e) => {\r\n  let item = e.target;\r\n\r\n  while (item.classList[0] !== \"buttons\") {\r\n    item = item.parentElement;\r\n  }\r\n\r\n  const buttons = item;\r\n\r\n  buttons.classList.toggle(\"slide\");\r\n  buttons.children[0].children[0].classList.toggle(\"rotate\");\r\n  buttons.children[1].classList.toggle(\"slide\");\r\n  buttons.children[2].classList.toggle(\"slide\");\r\n  buttons.children[3].classList.toggle(\"slide\");\r\n};\r\n\r\nconst handleShowCalendar = (props) => {\r\n  const calendar = document.getElementById(\r\n    \"calendar_\" + props.onSendListName + \"_\" + props.onSendItem.item\r\n  );\r\n  calendar.style.display = \"block\";\r\n};\r\n\r\nconst handleHoverItem = (id, item) => {\r\n  var ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n  ctx.font = \"1.5rem Montserrat\";\r\n  const width = ctx.measureText(item).width;\r\n  const size = Math.ceil(width / 190) * 3;\r\n  document.getElementById(id + \"_item-container\").style.height = `${size}rem`;\r\n};\r\n\r\nconst handleMouseLeaveItem = (id) => {\r\n  document.getElementById(id + \"_item-container\").style.height = \"3.5rem\";\r\n};\r\n\r\nconst ListItem = (props) => {\r\n  const id = props.onSendListName + \"_\" + props.onSendItem.item;\r\n  const [priority, setPriority] = useState([]);\r\n  const [checked, setChecked] = useState([]);\r\n  const [opacity, setOpacity] = useState([]);\r\n\r\n  useEffect(() => {\r\n    switch (props.onSendItem.priority) {\r\n      case \"high\":\r\n        setPriority(\"high-p\");\r\n        break;\r\n      case \"medium\":\r\n        setPriority(\"medium-p\");\r\n        break;\r\n      case \"low\":\r\n        setPriority(\"low-p\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (props.onSendItem.checked) {\r\n      setChecked(\"checked\");\r\n      setOpacity(\"0.35\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <li\r\n        className={\"item-container\" + \" \" + priority}\r\n        id={id + \"_item-container\"}\r\n        onMouseLeave={() => handleMouseLeaveItem(id)}\r\n      >\r\n        <div>\r\n          <Calendar\r\n            onSendListName={props.onSendListName}\r\n            onSendItem={props.onSendItem}\r\n            onScheduleLi={props.onScheduleLi}\r\n          />\r\n          <PriorityForm\r\n            key={Date.now() + Math.floor(Math.random() * 100)}\r\n            onSendPriority={props.onSendPriority}\r\n            onSendItem={props.onSendItem}\r\n            onSendListName={props.onSendListName}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"checkbox\"\r\n          onClick={() =>\r\n            props.onChecked(props.onSendListName, props.onSendItem.item)\r\n          }\r\n        >\r\n          <RiCheckboxBlankLine className=\"box\" />\r\n\r\n          <RiCheckLine className={\"check\" + \" \" + checked} />\r\n        </div>\r\n\r\n        <div\r\n          className=\"item-box\"\r\n          id={id + \"_item-box\"}\r\n          style={{ opacity: opacity }}\r\n          onMouseOver={() => handleHoverItem(id, props.onSendItem.item)}\r\n        >\r\n          {props.onSendItem.item}\r\n        </div>\r\n\r\n        <div className=\"buttons\" id=\"buttons-container\">\r\n          <button\r\n            id=\"slide-left-btn\"\r\n            type=\"button\"\r\n            onClick={(e) => handleSlideInBtns(e)}\r\n          >\r\n            {props.onSendItem.icon ? (\r\n              icons[props.onSendItem.icon]\r\n            ) : (\r\n          \r\n              <AiOutlineLeft />\r\n            )}\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            id=\"li-priority-btn\"\r\n            onClick={(e) =>\r\n              handleOpenPriorityForm(\r\n                e,\r\n                props.onSendListName + props.onSendItem.item\r\n              )\r\n            }\r\n          >\r\n            <MdPriorityHigh />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            id=\"li-schedule-btn\"\r\n            onClick={() => handleShowCalendar(props)}\r\n          >\r\n            <AiFillCalendar />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            id=\"li-delete-btn\"\r\n            onClick={() =>\r\n              props.onDeleteLi(props.onSendListName, props.onSendItem.item)\r\n            }\r\n          >\r\n            <AiFillDelete />\r\n          </button>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\PieChart\\Colors.js",[],"C:\\myProjects\\ReactProjects\\higgle-app\\src\\components\\Lists\\Lists\\PriorityForm.js",["110","111"],"import { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport function handleOpenPriorityForm(e, id) {\r\n  const form = document.getElementById(id + \"_priority-form\");\r\n  form.style.display = \"flex\";\r\n  if (e.clientY <= 362) form.style.transform = \"translateY(14px)\";\r\n  if (e.clientY >= 684) form.style.transform = \"translateY(-98px)\";\r\n}\r\n\r\nconst handleClosePriorityForm = (e, id) => {\r\n  document.getElementById(id + \"_priority-form\").style.display = \"none\";\r\n};\r\n\r\nconst selectPriority = (e, props, priority) => {\r\n  const item = document.getElementById(\r\n    props.onSendListName + \"_\" + props.onSendItem.item + \"_item-container\"\r\n  );\r\n\r\n  removeOtherPriority(item);\r\n\r\n  switch (priority) {\r\n    case \"high\":\r\n      props.onSendPriority(\"high\", props.onSendItem.item, props.onSendListName);\r\n      break;\r\n    case \"medium\":\r\n      props.onSendPriority(\r\n        \"medium\",\r\n        props.onSendItem.item,\r\n        props.onSendListName\r\n      );\r\n      break;\r\n    case \"low\":\r\n      props.onSendPriority(\"low\", props.onSendItem.item, props.onSendListName);\r\n      break;\r\n    default:\r\n      props.onSendPriority(\r\n        \"neutral\",\r\n        props.onSendItem.item,\r\n        props.onSendListName\r\n      );\r\n      break;\r\n  }\r\n  handleClosePriorityForm(e, props.onSendListName + props.onSendItem.item);\r\n};\r\n\r\n/*\r\nconst getPriorityId = (item) => {\r\n  if (item.classList[0] === \"icon\" || item.classList[0] === \"priority\")\r\n    item = item.parentElement;\r\n  return item.id;\r\n};*/\r\n\r\nconst getListItem = (item) => {\r\n  while (item.classList[0] !== \"item-container\") {\r\n    item = item.parentElement;\r\n  }\r\n  return item;\r\n};\r\n\r\nconst removeOtherPriority = (item) => {\r\n  const classes = item.classList;\r\n\r\n  for (var i = 0; i < classes.length; i++)\r\n    if (classes[i] !== \"item-container\") item.classList.remove(classes[i]);\r\n};\r\n\r\nconst PriorityForm = (props) => {\r\n  const id = props.onSendListName + props.onSendItem.item;\r\n  return (\r\n    <div className=\"priority-container\" id={id + \"_priority-form\"}>\r\n      <button\r\n        id=\"close-btn\"\r\n        type=\"button\"\r\n        onClick={(e) => handleClosePriorityForm(e, id)}\r\n      >\r\n        <AiFillCloseCircle className=\"close-btn-icon\" />\r\n      </button>\r\n\r\n      <p\r\n        id={id + \"high\"}\r\n        className=\"high\"\r\n        onClick={(e) => selectPriority(e, props, \"high\")}\r\n      >\r\n        <span className=\"priority\">High Priority</span>\r\n        <span className=\"icon\">!!!</span>\r\n      </p>\r\n      <p\r\n        id={id + \"medium\"}\r\n        className=\"medium\"\r\n        onClick={(e) => selectPriority(e, props, \"medium\")}\r\n      >\r\n        <span className=\"priority\">Medium Priority</span>\r\n        <span className=\"icon\">!!</span>\r\n      </p>\r\n      <p\r\n        id={id + \"low\"}\r\n        className=\"low\"\r\n        onClick={(e) => selectPriority(e, props, \"low\")}\r\n      >\r\n        <span className=\"priority\">Low Priority</span>\r\n        <span className=\"icon\">!</span>\r\n      </p>\r\n      <p\r\n        id={id + \"neutral\"}\r\n        onClick={(e) => selectPriority(e, props, \"neutral\")}\r\n      >\r\n        <span className=\"priority\">Neutral</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriorityForm;\r\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":24},{"ruleId":"116","severity":1,"message":"120","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":68,"column":9,"nodeType":"118","messageId":"123","endLine":68,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":30,"column":27,"nodeType":"126","messageId":"127","endLine":30,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":33,"column":24,"nodeType":"126","messageId":"127","endLine":33,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":60,"column":6,"nodeType":"130","endLine":60,"endColumn":19,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":35,"column":7,"nodeType":"134","messageId":"135","endLine":36,"endColumn":15},{"ruleId":"128","severity":1,"message":"136","line":52,"column":3,"nodeType":"118","endLine":52,"endColumn":12,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":76,"column":37,"nodeType":"126","messageId":"140","endLine":76,"endColumn":38},{"ruleId":"138","severity":1,"message":"139","line":102,"column":43,"nodeType":"126","messageId":"140","endLine":102,"endColumn":44},{"ruleId":"116","severity":1,"message":"141","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":21},{"ruleId":"116","severity":1,"message":"142","line":54,"column":7,"nodeType":"118","messageId":"119","endLine":54,"endColumn":18},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'AiOutlineClose' is defined but never used.","Identifier","unusedVar","'GiHamburgerMenu' is defined but never used.","no-redeclare","'agenda' is already defined.","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["145"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","React Hook useEffect contains a call to 'setPriority'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.onSendItem.priority, props.onSendItem.checked] as a second argument to the useEffect Hook.",["146"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'IconContext' is defined but never used.","'getListItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [props, selectedDay]",{"range":"151","text":"152"},"Add dependencies array: [props.onSendItem.priority, props.onSendItem.checked]",{"range":"153","text":"154"},[1847,1860],"[props, selectedDay]",[2184,2184],", [props.onSendItem.priority, props.onSendItem.checked]"]